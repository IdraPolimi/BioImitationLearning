% funzione per imparare una DCP in batch mode function [Y,Ft]=learn_dcp_batch_oa(ID,dt,goal,tau,n_rfs,init,traj,Tp,len)global dcps_oa;% inizializzo DMPdcp_oa('clear',ID);dcp_oa('init',ID,n_rfs,'minJerk_dcp',0);% inizializzo variabili per plottingZ=zeros(floor(len+1),2);X=Z;V=Z;Y=zeros(floor(len+1),3);T=Y;PSI=zeros(floor(len+1),n_rfs);W=PSI;% genero traiettoriat=init;td=0;tdd=0;% genero T, Td, Tddfor i=1:len    T(i,1)=traj(i);    T(i,2)=(traj(i+1)-traj(i))/dt;endT(i+1,1)=traj(i+1);T(i+1,2)=(traj(i+2)-T(i+1,1))/dt;tmp=(traj(i+3)-traj(i+2))/dt;for i=1:len-1    T(i,3)=(T(i+1,2)-T(i,2))/dt;endT(i+1,3)=(tmp-T(i+1,2))/dt;% uso la in-built function per inizializzare la dcpdcp_oa('Batch_Fit',ID,tau,dt,T(:,1),T(:,2),T(:,3));W   = dcps_oa(ID).w';%Ft=dcps_oa(ID).Ft;Ft=1;% test the fitdcp_oa('reset_state',ID, T(1,1));dcp_oa('set_goal',ID,T(end,1)+goal,1);for i=0:len,  [y,yd,ydd]=dcp_oa('run',ID,tau,dt);    Z(i+1,:)   = [dcps_oa(ID).z dcps_oa(ID).zd];  Y(i+1,:)   = [y yd ydd];  X(i+1,:)   = [dcps_oa(ID).x dcps_oa(ID).xd];  V(i+1,:)   = [dcps_oa(ID).v dcps_oa(ID).vd];  PSI(i+1,:) = dcps_oa(ID).psi';  W(i+1,:)   = dcps_oa(ID).w';%  F(i+1)   = dcps_oa(ID).f;  end;  