function ParachuteReflexok(ID1,ID2,ID3,ID4,ID5,ID6)
global dcps;
global massimo
global minimo
T1=[ -0.12421, -0.12421, -0.12575, -0.12421, -0.12421, -0.12421, -0.12421, -0.12421, -0.12575, -0.12421, -0.12575, -0.12421, -0.12575, -0.12421, -0.12575, -0.12421, -0.12421, -0.12575, -0.12575, -0.12421, -0.12575, -0.12421, -0.12575, -0.12575, -0.12575, -0.12421, -0.12575, -0.12575, -0.12421, -0.12421, -0.12421, -0.12421, -0.12575, -0.12575, -0.12421, -0.12421, -0.12575, -0.12421, -0.12575, -0.12575, -0.12575, -0.12575, -0.12575, -0.12575, -0.14262, -0.14262, -0.14262, -0.14262, -0.14262, -0.14262, -0.14262, -0.14569, -0.14569, -0.14569, -0.14569, -0.14569, -0.14722, -0.14569, -0.14569, -0.14569, -0.14569, -0.14569, -0.14876, -0.14876, -0.14876, -0.14876, -0.15643, -0.15643, -0.15643, -0.15643, -0.15796, -0.15949, -0.16103, -0.16563, -0.16716, -0.17330, -0.17637, -0.18864, -0.19171, -0.20091, -0.20398, -0.20551, -0.21318, -0.21932, -0.22392, -0.22699, -0.23159, -0.23619, -0.23773, -0.23926, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24540, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24693, -0.24540, -0.24540, -0.24386, -0.24386, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24233, -0.24080, -0.24080, -0.24233, -0.24233, -0.24080, -0.24233, -0.24080, -0.24233, -0.24233, -0.24233, -0.24233, -0.24080, -0.24233, -0.24233, -0.24233, -0.24233, -0.24386, -0.24386, -0.24386, -0.24386, -0.24693, -0.24693, -0.24847, -0.25000, -0.25153, -0.25153, -0.25153, -0.25307, -0.25460, -0.25614, -0.25767, -0.25920, -0.26687, -0.27608, -0.27761, -0.28221, -0.28221, -0.28221, -0.28375, -0.28375, -0.28375, -0.28221, -0.28375, -0.28375, -0.28375, -0.28375, -0.28375, -0.28682, -0.28988, -0.29295, -0.29449, -0.29449, -0.29755, -0.29909, -0.30676, -0.30983, -0.31136, -0.31443, -0.31596, -0.31750, -0.31750, -0.31750, -0.31750, -0.31750, -0.31750, -0.31596, -0.31750, -0.31750, -0.31750, -0.31750, -0.31596, -0.31596, -0.31750, -0.31596, -0.31596, -0.31596, -0.31596, -0.31596, -0.31596, -0.31596, -0.31443, -0.31136, -0.31136, -0.31136, -0.31136, -0.30829, -0.30676, -0.29755, -0.29755, -0.29755, -0.29755, -0.29142, -0.29142, -0.29142, -0.29142, -0.28988, -0.29142, -0.28835, -0.28988, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28835, -0.28528, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27915, -0.27761, -0.27915, -0.27761, -0.27915, -0.27915, -0.27915, -0.27915, -0.27608, -0.27608, -0.27454, -0.27454, -0.27301, -0.27301, -0.27148, -0.27148, -0.26994, -0.26994, -0.26841, -0.26381, -0.25920, -0.25767, -0.25153, -0.25153, -0.25153, -0.25000, -0.24847, -0.24847, -0.24693, -0.24693, -0.24386, -0.24386, -0.24233, -0.24080, -0.23773, -0.23619, -0.23466, -0.23313, -0.23159, -0.23159, -0.23006, -0.23006, -0.22852, -0.22852, -0.22699, -0.22392, -0.22392, -0.22239, -0.22392, -0.22239, -0.22239, -0.22392, -0.22239, -0.22239, -0.22239, -0.22239, -0.22239, -0.22239, -0.22239, -0.22239, -0.22392, -0.22392, -0.22239, -0.22239, -0.22239, -0.22239, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22392, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22546, -0.22699, -0.22699, -0.22699, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22852, -0.22699, -0.22852];

T2=[ -0.03686, -0.03839, -0.03839, -0.03686, -0.03686, -0.03839, -0.03686, -0.03839, -0.03686, -0.03839, -0.03839, -0.03686, -0.03686, -0.03686, -0.03686, -0.03839, -0.03686, -0.03839, -0.03686, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03993, -0.03839, -0.03993, -0.03993, -0.03839, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03839, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03686, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03993, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03839, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03686, -0.03839, -0.03839, -0.03839, -0.03993, -0.03993, -0.03993, -0.03993, -0.04146, -0.04606, -0.04760, -0.05066, -0.05833, -0.07061, -0.08441, -0.09668, -0.11049, -0.12430, -0.13964, -0.15498, -0.17032, -0.18259, -0.19026, -0.19946, -0.21020, -0.22554, -0.24241, -0.25008, -0.25008, -0.25008, -0.25469, -0.25775, -0.26236, -0.26696, -0.27003, -0.27309, -0.27616, -0.27923, -0.27923, -0.28076, -0.28383, -0.28537, -0.28690, -0.29150, -0.29150, -0.29304, -0.29457, -0.29917, -0.30224, -0.30531, -0.30991, -0.31298, -0.31605, -0.31758, -0.32065, -0.32372, -0.32985, -0.33599, -0.33906, -0.34212, -0.34826, -0.35133, -0.35440, -0.35900, -0.36207, -0.36667, -0.36667, -0.36820, -0.36974, -0.37280, -0.37434, -0.37741, -0.38508, -0.38814, -0.39581, -0.39888, -0.40042, -0.40042, -0.40042, -0.40348, -0.40502, -0.40502, -0.40655, -0.40655, -0.40655, -0.40655, -0.40655, -0.40655, -0.40655, -0.40348, -0.40348, -0.40042, -0.40042, -0.40042, -0.40042, -0.40042, -0.40042, -0.39888, -0.39888, -0.39735, -0.39735, -0.39428, -0.39275, -0.39121, -0.38968, -0.38661, -0.38354, -0.38201, -0.37894, -0.37587, -0.37587, -0.37587, -0.37587, -0.37587, -0.37587, -0.37587, -0.37434, -0.37434, -0.37280, -0.37280, -0.37280, -0.37127, -0.36974, -0.36820, -0.36820, -0.36820, -0.36820, -0.36820, -0.36820, -0.36820, -0.36820, -0.36820, -0.36667, -0.36360, -0.36207, -0.36053, -0.35900, -0.35900, -0.35900, -0.35900, -0.35746, -0.35746, -0.35440, -0.35286, -0.34979, -0.34673, -0.34519, -0.34366, -0.34366, -0.34212, -0.34059, -0.33906, -0.33752, -0.33292, -0.32678, -0.31605, -0.30991, -0.30684, -0.30531, -0.30531, -0.30377, -0.30071, -0.29610, -0.29304, -0.28537, -0.27923, -0.27156, -0.26696, -0.26082, -0.25622, -0.25315, -0.25008, -0.24702, -0.24548, -0.24241, -0.24088, -0.23935, -0.23628, -0.23168, -0.22707, -0.22401, -0.22247, -0.21940, -0.21787, -0.21787, -0.21634, -0.21327, -0.21020, -0.20713, -0.20406, -0.19946, -0.19486, -0.19026, -0.18259, -0.17645, -0.17032, -0.16571, -0.16418, -0.15651, -0.14884, -0.14117, -0.13503, -0.12890, -0.12583, -0.12276, -0.12276, -0.12430, -0.12276, -0.12276, -0.12430, -0.12276, -0.12276, -0.12276, -0.12276, -0.12276, -0.12276, -0.12276, -0.12430, -0.12430, -0.12430, -0.12430, -0.12583, -0.12583, -0.12583, -0.12583, -0.12430, -0.12430, -0.12583, -0.12583, -0.12583, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13503, -0.13657, -0.13503, -0.13503, -0.13657, -0.13503, -0.13657, -0.13657, -0.13657, -0.13657, -0.13503, -0.13657, -0.13657];

T3=[ 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45419, 1.45266, 1.45266, 1.45419, 1.45266, 1.45266, 1.45419, 1.45419, 1.45266, 1.45266, 1.45419, 1.45419, 1.45419, 1.45266, 1.45266, 1.45266, 1.45266, 1.45266, 1.45419, 1.45266, 1.45266, 1.45266, 1.45419, 1.45419, 1.45419, 1.45266, 1.45419, 1.45419, 1.45419, 1.45419, 1.45726, 1.45726, 1.45726, 1.45726, 1.45726, 1.45879, 1.46033, 1.46033, 1.46033, 1.45879, 1.46033, 1.46033, 1.46033, 1.46033, 1.46186, 1.46186, 1.46186, 1.46186, 1.46186, 1.46339, 1.46493, 1.46493, 1.46493, 1.46646, 1.46646, 1.46646, 1.46646, 1.46800, 1.46800, 1.46953, 1.47106, 1.47260, 1.47413, 1.47413, 1.47873, 1.47873, 1.47873, 1.47873, 1.48027, 1.48334, 1.48334, 1.48334, 1.48334, 1.48334, 1.48487, 1.48640, 1.48794, 1.48794, 1.49254, 1.49407, 1.49714, 1.49868, 1.49868, 1.50174, 1.50635, 1.50635, 1.50788, 1.50788, 1.51095, 1.51555, 1.51708, 1.51862, 1.51862, 1.52015, 1.52015, 1.52015, 1.52015, 1.52015, 1.52015, 1.52015, 1.52169, 1.52322, 1.52322, 1.52475, 1.52475, 1.52475, 1.52475, 1.52475, 1.52629, 1.52629, 1.52629, 1.52475, 1.52475, 1.52475, 1.52475, 1.52475, 1.52475, 1.52475, 1.52475, 1.52169, 1.52015, 1.51862, 1.51708, 1.51402, 1.51248, 1.51248, 1.51248, 1.50941, 1.50941, 1.50788, 1.50788, 1.50635, 1.50174, 1.50021, 1.50021, 1.49714, 1.49714, 1.46646, 1.40817, 1.39130, 1.38209, 1.36215, 1.34067, 1.31920, 1.29772, 1.27471, 1.25784, 1.23943, 1.21949, 1.19494, 1.16887, 1.14586, 1.12131, 1.09370, 1.04921, 1.01086, 0.99399, 0.97558, 0.96024, 0.94490, 0.92803, 0.91269, 0.90042, 0.88354, 0.86513, 0.84673, 0.82678, 0.80684, 0.78690, 0.76542, 0.74548, 0.72861, 0.70867, 0.68566, 0.66265, 0.64270, 0.61816, 0.59975, 0.58288, 0.56447, 0.54913, 0.52152, 0.49391, 0.48470, 0.45402, 0.44175, 0.42181, 0.39880, 0.37425, 0.35278, 0.32977, 0.30983, 0.29142, 0.27148, 0.25614, 0.24233, 0.22699, 0.21625, 0.20858, 0.20091, 0.19478, 0.19017, 0.18404, 0.17944, 0.17330, 0.16563, 0.15489, 0.15182, 0.14569, 0.14109, 0.13955, 0.13802, 0.13648, 0.13035, 0.12575, 0.12575, 0.12421, 0.12421, 0.12421, 0.12268, 0.12114, 0.12114, 0.12114, 0.12114, 0.11961, 0.11808, 0.11501, 0.11041, 0.10734, 0.10274, 0.09813, 0.09660, 0.09200, 0.08893, 0.08279, 0.07512, 0.06899, 0.06439, 0.05518, 0.04751, 0.03984, 0.03371, 0.02910, 0.02450, 0.01990, 0.01223, 0.00763, -0.00004, -0.01078, -0.02765, -0.04299, -0.05833, -0.06907, -0.07521, -0.08134, -0.08748, -0.09362, -0.09822, -0.10282, -0.10589, -0.10742, -0.10896, -0.11049, -0.10896, -0.10896, -0.10896, -0.10896, -0.10896, -0.10896, -0.10742, -0.10742, -0.10282, -0.09975, -0.09668, -0.08901, -0.07828, -0.06907, -0.05680, -0.04299, -0.03226, -0.01845, -0.00464, 0.00916, 0.02143, 0.03217, 0.04291, 0.05211, 0.06439, 0.07359, 0.08586, 0.09813, 0.10887, 0.12114, 0.13188, 0.14109, 0.15489, 0.16870, 0.17944, 0.18711, 0.19784, 0.20551, 0.21472, 0.22546, 0.23619, 0.24386, 0.25153, 0.25614, 0.26074, 0.26687, 0.27301, 0.28068, 0.28375, 0.28682, 0.28835, 0.29295, 0.29602, 0.30062, 0.30369, 0.30369, 0.30522, 0.30829, 0.31136, 0.31443, 0.31443, 0.31750, 0.31750, 0.31750, 0.31750, 0.31596, 0.31596, 0.31596, 0.31596, 0.31903, 0.31903, 0.32056, 0.32056, 0.31903, 0.31903, 0.31596, 0.30983, 0.30829, 0.30216, 0.29602, 0.28835, 0.28068, 0.27761, 0.27608, 0.27608, 0.27761, 0.27761, 0.27761, 0.27761, 0.27761, 0.27761, 0.27761, 0.27761, 0.27761, 0.27608, 0.27608, 0.27608, 0.27454, 0.27301];
T4=[ 0.36352, 0.36352, 0.36352, 0.36352, 0.36352, 0.36352, 0.36505, 0.36352, 0.36352, 0.36352, 0.36352, 0.36352, 0.36505, 0.36505, 0.36505, 0.36505, 0.36352, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36505, 0.36965, 0.37119, 0.37119, 0.37119, 0.37119, 0.37119, 0.37119, 0.37272, 0.37579, 0.37732, 0.38039, 0.38653, 0.39113, 0.39420, 0.39573, 0.40033, 0.40493, 0.41414, 0.42334, 0.43101, 0.43868, 0.44942, 0.46476, 0.47857, 0.49084, 0.50464, 0.51998, 0.53226, 0.54606, 0.55987, 0.56907, 0.57981, 0.58901, 0.60282, 0.61663, 0.63043, 0.64424, 0.66111, 0.68105, 0.69946, 0.71787, 0.73628, 0.75469, 0.77309, 0.79304, 0.81451, 0.83599, 0.85593, 0.87280, 0.89121, 0.91115, 0.93263, 0.94950, 0.96638, 0.98172, 0.99859, 1.01700, 1.03541, 1.05382, 1.06916, 1.08143, 1.09370, 1.10597, 1.11824, 1.12745, 1.14125, 1.15659, 1.17040, 1.18421, 1.19801, 1.21028, 1.23023, 1.23636, 1.24403, 1.25017, 1.25784, 1.26244, 1.27011, 1.27931, 1.28698, 1.29465, 1.29926, 1.30232, 1.30386, 1.30846, 1.31153, 1.31153, 1.31460, 1.31460, 1.31613, 1.31766, 1.31766, 1.31920, 1.31766, 1.31920, 1.31920, 1.31920, 1.31920, 1.31920, 1.31920, 1.32073, 1.32073, 1.32073, 1.32073, 1.32073, 1.32227, 1.32227, 1.32380, 1.32380, 1.32380, 1.32533, 1.32533, 1.32533, 1.32533, 1.32533, 1.32533, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32227, 1.32380, 1.32227, 1.32227, 1.32227, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32380, 1.32227, 1.32227, 1.32227, 1.32227, 1.32073, 1.31920, 1.31766, 1.31613, 1.31460, 1.30999, 1.30232, 1.29772, 1.29772, 1.29619, 1.29312, 1.29312, 1.28698, 1.28698, 1.27931, 1.27164, 1.26858, 1.25784, 1.25170, 1.24250, 1.23176, 1.22256, 1.21028, 1.19494, 1.18421, 1.17347, 1.15813, 1.14125, 1.12285, 1.10290, 1.08603, 1.06916, 1.05688, 1.04154, 1.03081, 1.01700, 1.00626, 0.98939, 0.97251, 0.94950, 0.93263, 0.91115, 0.88354, 0.87741, 0.86053, 0.84673, 0.82832, 0.81298, 0.80071, 0.79150, 0.77923, 0.76542, 0.75315, 0.74395, 0.73628, 0.73014, 0.72247, 0.71480, 0.70713, 0.70253, 0.69333, 0.68105, 0.67032, 0.66111, 0.65651, 0.64577, 0.63964, 0.63350, 0.62890, 0.62123, 0.61202, 0.60129, 0.58901, 0.57521, 0.56140, 0.55066, 0.54146, 0.53379, 0.52612, 0.51998, 0.51385, 0.50925, 0.50158, 0.49697, 0.48777, 0.48010, 0.47243, 0.47090, 0.46476, 0.45709, 0.45095, 0.44175, 0.43101, 0.41721, 0.40800, 0.39880, 0.39266, 0.38653, 0.37579, 0.36505, 0.35278, 0.34051, 0.32670, 0.31289, 0.29909, 0.28221, 0.26534, 0.25000, 0.23466, 0.21779, 0.20398, 0.19171, 0.17637, 0.16563, 0.15643, 0.14876, 0.14262, 0.13802, 0.13495, 0.13035, 0.12575, 0.12268, 0.11961, 0.11808, 0.11501, 0.11041, 0.10887, 0.10427, 0.09967, 0.09660, 0.09200, 0.08893, 0.08586, 0.08279, 0.07973, 0.07359, 0.06592, 0.05825, 0.05518, 0.05518, 0.05518, 0.05518, 0.05365, 0.05058, 0.04751, 0.04291, 0.03524, 0.03064, 0.03064, 0.03064, 0.03217, 0.03217, 0.03371, 0.03371, 0.03371, 0.03677, 0.03831, 0.03984, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04138, 0.04291, 0.04444, 0.04751, 0.04598, 0.04598, 0.04598, 0.04598, 0.04598, 0.04598, 0.04598, 0.04598, 0.04598, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04444, 0.04598];
%plot(1:size(T1),T1)
size(T1);
size(T2);
size(T3);
size(T4);
% name1='PARALElbowRoll';
% name2='PARALElbowYaw';
% name3='PARALShoulderPitch';
% name4='PARALShoulderRoll';
% learn_dcp_batch(ID1,T1,name1);
% learn_dcp_batch(ID2,T2,name2);
% learn_dcp_batch(ID3,T3,name3);
% learn_dcp_batch(ID4,T4,name4);
% if(any(massimo==1000))
%     massimo(1)=max(T1);
%     massimo(2)=max(T2);
%     massimo(3)=max(T3);
%     massimo(4)=max(T4);
% else
%     if(max(T1)>massimo(1))
%         massimo(1)=max(T1);
%     end
%     if(max(T2)>massimo(2))
%         massimo(2)=max(T2);
%     end
%     if(max(T3)>massimo(3))
%         massimo(3)=max(T3);
%     end
%     if(max(T4)>massimo(4))
%         massimo(4)=max(T4);
%     end
% end
% 
% if(any(minimo==1000))
%     minimo(1)=min(T1);
%     minimo(2)=min(T2);
%     minimo(3)=min(T3);
%     minimo(4)=min(T4);
% else
%     if(min(T1)<minimo(1))
%         minimo(1)=min(T1);
%     end
%     if(min(T2)<minimo(2))
%         minimo(2)=min(T2);
%     end
%     if(min(T3)<minimo(3))
%         minimo(3)=min(T3);
%     end
%     if(min(T4)<minimo(4))
%          minimo(4)=min(T4);
%     end
% end



for i=1:300
leftMatrix(i,:)=fLeftHand([T3(i);T4(i);T2(i);T1(i)]);end;

name1='ParachuteX';
 name2='ParachuteY';
 name3='ParachuteZ';
 name4='ParachuteWX';
 name5='ParachuteWY';
 name6='ParachuteWZ';
%  learn_dcp_batch(ID1,leftMatrix(:,1)',name1);
%  learn_dcp_batch(ID2,leftMatrix(:,2)',name2);
%  learn_dcp_batch(ID3,leftMatrix(:,3)',name3);

tau  = 0.5;
dt  = 0.001;
len=tau/dt;
x=1:300;
xx=linspace(1,300,floor(len+1)+ 3);
n_rfs     = [15 15 15 15 15 15];
time = (0:1:len)';
for i=ID1:ID3
    traj=csaps(x,leftMatrix(:,i)',0.9,xx);
    Y=learn_dcp_batch_oa(i,dt,0,tau,n_rfs(i),0,traj,0,len);
    T(:,i)=Y(:,1);%501 valori
    
   
    %%%%%%%%%%%%%%per plottare
    traj=traj(1:501)';
    figure;
    clf;
    plot(time,Y(:,1),'b -o',time,traj,'r');
    title('y');
    aa=axis;
    axis([min(time) max(time) aa(3:4)]);
    %%%%%%%%%%%%%%%%%%%%%%
 
    dcp('reset_state',i, traj(1));
    dcp('set_goal',i,traj(floor(len+1)),1);
    goal(i)=T(floor(len+1),i);
end

%  learn_dcp_batch(ID4,leftMatrix(:,4)',name4);
%  learn_dcp_batch(ID5,leftMatrix(:,5)',name5);
%  learn_dcp_batch(ID6,leftMatrix(:,6)',name6);

for i=ID4:ID6
    traj=csaps(x,leftMatrix(:,i)',0.9,xx);
    Y=learn_dcp_batch_oa(i,dt,0,tau,n_rfs(i),0,traj,0,len);
    T(:,i)=Y(:,1);%501 valori
    
   
    %%%%%%%%%%%%%%per plottare
    traj=traj(1:501)';
    figure;
    clf;
    plot(time,Y(:,1),'b -o',time,traj,'r');
    title('y');
    aa=axis;
    axis([min(time) max(time) aa(3:4)]);
    %%%%%%%%%%%%%%%%%%%%%%
 
    dcp('reset_state',i, traj(1));
    dcp('set_goal',i,traj(floor(len+1)),1);
    goal(i)=T(floor(len+1),i);
end
 
 
%  if(any(massimo==1000))
%     massimo(1)=max(leftMatrix(:,1)');
%     massimo(2)=max(leftMatrix(:,2)');
%     massimo(3)=max(leftMatrix(:,3)');
%     massimo(4)=max(leftMatrix(:,4)');
%     massimo(5)=max(leftMatrix(:,5)');
%     massimo(6)=max(leftMatrix(:,6)');
% else
%     if(max(leftMatrix(:,1)')>massimo(1))
%         massimo(1)=max(leftMatrix(:,1)');
%     end
%     if(max(leftMatrix(:,2)')>massimo(2))
%         massimo(2)=max(leftMatrix(:,2)');
%     end
%     if(max(leftMatrix(:,3)')>massimo(3))
%         massimo(3)=max(leftMatrix(:,3)');
%     end
%     if(max(leftMatrix(:,4)')>massimo(4))
%         massimo(4)=max(leftMatrix(:,4)');
%     end
%     
%     if(max(leftMatrix(:,5)')>massimo(5))
%         massimo(5)=max(leftMatrix(:,5)');
%     end
%     
%     if(max(leftMatrix(:,6)')>massimo(6))
%         massimo(6)=max(leftMatrix(:,6)');
%     end
%     
% end
% 
% if(any(minimo==1000))
%     minimo(1)=min(leftMatrix(:,1)');
%     minimo(2)=min(leftMatrix(:,2)');
%     minimo(3)=min(leftMatrix(:,3)');
%     minimo(4)=min(leftMatrix(:,4)');
%     minimo(5)=min(leftMatrix(:,5)');
%     minimo(6)=min(leftMatrix(:,6)');
% else
%     if(min(leftMatrix(:,1)')>minimo(1))
%         minimo(1)=min(leftMatrix(:,1)');
%     end
%     if(min(leftMatrix(:,2)')>minimo(2))
%         minimo(2)=min(leftMatrix(:,2)');
%     end
%     if(min(leftMatrix(:,3)')>minimo(3))
%         minimo(3)=min(leftMatrix(:,3)');
%     end
%     if(min(leftMatrix(:,4)')>minimo(4))
%         minimo(4)=min(leftMatrix(:,4)');
%     end
%     
%     if(min(leftMatrix(:,5)')>minimo(5))
%         minimo(5)=min(leftMatrix(:,5)');
%     end
%     
%     if(min(leftMatrix(:,6)')>minimo(6))
%         minimo(6)=min(leftMatrix(:,6)');
%     end
%     
% end



end